{
  "name": "@koromerzhin/labstag",
  "version": "1.4.0",
  "description": "Site Internet sous Symfony",
  "main": "index.js",
  "scripts": {
    "all:translation": "npm-run-all -c  translation:*",
    "all:workflow:dump": "npm-run-all -c workflow:dump:*",
    "assets": "docker exec -i $($npm_package_config_phpfpm) symfony console assets:install public --symlink --relative",
    "bash:phpfpm": "docker exec -ti $($npm_package_config_phpfpm) bash",
    "bdd:mariadb": "korojscommands bddset-mariadb",
    "cache:clear": "docker exec -i $($npm_package_config_phpfpm) symfony console cache:clear",
    "cmd:install:all": "npm-run-all -c exec doctrine:migrate assets encore:dev lint:all",
    "cmd:install:bdd": "npm-run-all -c doctrine:fixtures cmd:labstag:all",
    "cmd:install:dev": "npm-run-all -c download:phar cmd:install:all cmd:install:bdd",
    "cmd:install:prod": "npm-run-all -c cmd:install:all cmd:install:bdd encore:build",
    "cmd:labstag:all": "npm-run-all -c labstag:install labstag:guard-route labstag:workflows-show",
    "cmd:php-cs-fixer_phpcbf": "npm-run-all -c lint:php-cs-fixer lint:phpcbf",
    "cmd:validate_outdated": "npm-run-all -c composer:validate composer:outdated",
    "composer:audit": "docker exec -i $($npm_package_config_phpfpm) symfony composer audit",
    "composer:fund": "docker exec -i $($npm_package_config_phpfpm) symfony composer fund",
    "composer:install": "docker exec -i $($npm_package_config_phpfpm) symfony composer install",
    "composer:install:dev": "docker exec -i $($npm_package_config_phpfpm) symfony composer install --no-progress --prefer-dist --optimize-autoloader",
    "composer:install:prod": "docker exec -i $($npm_package_config_phpfpm) symfony composer install --no-progress --prefer-dist --optimize-autoloader --no-dev",
    "composer:outdated": "docker exec -i $($npm_package_config_phpfpm) symfony composer outdated",
    "composer:suggests": "docker exec -i $($npm_package_config_phpfpm) symfony composer suggests --by-suggestion",
    "composer:update": "docker exec -i $($npm_package_config_phpfpm) symfony composer update",
    "composer:validate": "docker exec -i $($npm_package_config_phpfpm) symfony composer validate",
    "contributors:add": "all-contributors add",
    "contributors:check": "all-contributors check",
    "contributors:generate": "all-contributors generate",
    "docker:deploy": "korojscommands docker_deploy",
    "docker:getpull-image": "korojscommands docker_getpull-image",
    "docker:ls": "korojscommands docker_ls",
    "docker:waiting": "korojscommands docker_waiting --status running --container apache phpfpm",
    "doctrine:fixtures": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:fixtures:load -n",
    "doctrine:migrate": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:migrations:migrate -n",
    "doctrine:schema:update": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:schema:update --complete --force",
    "doctrine:validate": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:schema:validate",
    "download:phar": "korojscommands php_download-phar",
    "encore:build": "encore production --progress",
    "encore:dev": "encore dev",
    "encore:dev:server": "encore dev-server",
    "encore:watch": "encore dev --watch",
    "eslint": "eslint assets/js/",
    "eslint:fix": "eslint assets/js/ --fix",
    "exec": "npm-run-all -c bdd:mariadb docker:getpull-image docker:deploy docker:waiting docker:ls",
    "jscpd": "jscpd assets apps/src",
    "jscpd:report": "jscpd assets apps/src -r html -s",
    "labstag:geocode:install": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:geocode:install",
    "labstag:guard-route": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:guard-route",
    "labstag:install": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:install",
    "labstag:workflows-show": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:workflows-show",
    "lint:all": "npm-run-all -c cmd:validate_outdated cmd:php-cs-fixer_phpcbf eslint:fix lint:stylelint:fix lint:twig lint:container lint:yaml lint:phpaudit lint:markdown rector:run",
    "lint:container": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:container",
    "lint:markdown": "markdownlint README.md",
    "lint:php-cs-fixer": "docker exec -i $($npm_package_config_phpfpm) symfony php php-cs-fixer.phar fix src",
    "lint:php-cs-fixer:dry": "docker exec -i $($npm_package_config_phpfpm) symfony php php-cs-fixer.phar fix src --dry-run -v --diff",
    "lint:phpaudit": "npm-run-all -c lint:phpcs lint:phpmd lint:phpmnd lint:phpstan:0",
    "lint:phpcbf": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpcbf",
    "lint:phpcs": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpcs",
    "lint:phpcs:error": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpcs:error",
    "lint:phpcs:warning": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpcs:warning",
    "lint:phpdoc": "docker exec -i $($npm_package_config_phpfpm) symfony php phpDocumentor.phar -d src -t public/docs",
    "lint:phploc": "docker exec -i $($npm_package_config_phpfpm) symfony php phploc.phar src",
    "lint:phpmd": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpmd",
    "lint:phpmnd": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpmnd",
    "lint:phpstan:0": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:0",
    "lint:phpstan:1": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:1",
    "lint:phpstan:2": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:2",
    "lint:phpstan:3": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:3",
    "lint:phpstan:4": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:4",
    "lint:phpstan:5": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:5",
    "lint:phpstan:6": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:6",
    "lint:phpstan:7": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:7",
    "lint:phpstan:8": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:8",
    "lint:phpstan:9": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpstan:9",
    "lint:stylelint": "stylelint assets/scss/*.scss --custom-syntax postcss-scss",
    "lint:stylelint:fix": "stylelint assets/scss/*.scss --custom-syntax postcss-scss --fix",
    "lint:twig": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:twig templates",
    "lint:yaml": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:yaml config translations --parse-tags",
    "messenger:consume": "docker exec -i $($npm_package_config_phpfpm) symfony console messenger:consume async -vv",
    "messenger:stop": "docker exec -i $($npm_package_config_phpfpm) symfony console messenger:stop-workers",
    "rector:dry": "docker exec -i $($npm_package_config_phpfpm) symfony composer run rector-dry",
    "rector:run": "docker exec -i $($npm_package_config_phpfpm) symfony composer run rector",
    "storybook:build": "storybook build",
    "storybook:serve": "storybook dev -p 6006",
    "test:behat": "docker exec -i $($npm_package_config_phpfpm) symfony composer run behat",
    "test:phpunit": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpunit",
    "translation:en": "docker exec -i $($npm_package_config_phpfpm) symfony console translation:extract --force --format=yaml en",
    "translation:fr": "docker exec -i $($npm_package_config_phpfpm) symfony console translation:extract --force --format=yaml fr",
    "workflow:dump:attachment": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump attachment | dot -Tpng -o workflows.png",
    "workflow:dump:bookmark": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump bookmark | dot -Tpng -o bookmark.png",
    "workflow:dump:chapter": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump chapter | dot -Tpng -o chapter.png",
    "workflow:dump:edito": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump edito | dot -Tpng -o edito.png",
    "workflow:dump:email": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump email | dot -Tpng -o email.png",
    "workflow:dump:history": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump history | dot -Tpng -o history.png",
    "workflow:dump:memo": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump memo | dot -Tpng -o memo.png",
    "workflow:dump:phone": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump phone | dot -Tpng -o phone.png",
    "workflow:dump:post": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump post | dot -Tpng -o post.png",
    "workflow:dump:user": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump user | dot -Tpng -o user.png"
  },
  "config": {
    "wdump": "symfony console workflow:dump",
    "phpfpm": "npx korojscommands docker_getname-container --container phpfpm"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koromerzhin/labstag.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/koromerzhin/labstag/issues"
  },
  "homepage": "https://github.com/koromerzhin/labstag#readme",
  "devDependencies": {
    "@babel/preset-env": "7.22.*",
    "@babel/preset-typescript": "7.22.*",
    "@storybook/addon-actions": "7.0.*",
    "@storybook/addon-essentials": "7.0.*",
    "@storybook/addon-interactions": "7.0.*",
    "@storybook/addon-links": "7.0.*",
    "@storybook/blocks": "7.0.*",
    "@storybook/html": "7.0.*",
    "@storybook/html-webpack5": "7.0.*",
    "@storybook/server": "7.0.*",
    "@storybook/server-webpack5": "7.0.*",
    "@storybook/testing-library": "0.2.*",
    "@storybook/web-components": "7.0.*",
    "@storybook/web-components-webpack5": "7.0.*",
    "@symfony/webpack-encore": "4.3.*",
    "autoprefixer": "^10.4.14",
    "browserslist": "4.21.*",
    "core-js": "3.31.*",
    "css-loader": "6.8.*",
    "eslint": "8.43.*",
    "eslint-config-standard": "17.1.*",
    "eslint-plugin-import": "2.27.*",
    "eslint-plugin-node": "11.1.*",
    "eslint-plugin-promise": "6.1.*",
    "eslint-plugin-storybook": "0.6.*",
    "file-loader": "6.2.*",
    "lit": "2.7.*",
    "postcss-discard-comments": "^6.0.0",
    "postcss-loader": "7.3.*",
    "postcss-scss": "4.0.*",
    "react": "18.2.*",
    "react-dom": "18.2.*",
    "regenerator-runtime": "0.13.*",
    "sass": "1.63.*",
    "sass-loader": "13.3.*",
    "storybook": "7.0.*",
    "style-loader": "3.3.*",
    "stylelint": "15.8.*",
    "stylelint-config-standard": "33.0.*",
    "stylelint-scss": "5.0.*",
    "twig": "1.16.*",
    "twigjs-loader": "1.0.*",
    "url-loader": "4.1.*",
    "webpack-notifier": "1.15.*"
  },
  "engines": {
    "node": ">=18"
  },
  "browserslist": [
    "> 1%",
    "last 4 versions"
  ],
  "dependencies": {
    "@ckeditor/ckeditor5-build-classic": "38.0.*",
    "@fortawesome/fontawesome-free": "6.4.*",
    "@popperjs/core": "2.11.*",
    "bootstrap": "5.3.*",
    "flag-icons": "6.7.*",
    "korojscommands": "1.2.*",
    "matchmedia-polyfill": "0.3.*",
    "mitt": "3.0.*",
    "perfect-scrollbar": "1.5.*",
    "simplebar": "6.2.*",
    "sortablejs": "1.15.*",
    "svg4everybody": "2.1.*",
    "swiper": "10.0.*",
    "tarteaucitronjs": "1.12.*",
    "tom-select": "2.2.*"
  }
}
