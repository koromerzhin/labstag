# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  file_directory: '%kernel.project_dir%/public/uploads'
  metatags: ['disclaimer', 'meta', 'tarteaucitron', 'format_datetime']

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Labstag\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - "../src/Reader/"
    Labstag\Paragraph\:
        resource: "../src/Paragraph/"
        public: true
        tags: [paragraphsclass]
    Labstag\Entity\:
        resource: "../src/Entity/"
        public: true
        tags: [entitiesclass]
    Labstag\Block\:
        resource: "../src/Block/"
        public: true
        tags: [blocksclass]
    Labstag\Front\:
        resource: "../src/Front/"
        public: true
        tags: [frontclass]
    Labstag\Form\Front\:
      resource: "../src/Form/Front/"
      public: true
      tags: [formfront]
    Labstag\PostForm\:
      resource: "../src/PostForm/"
      public: true
      tags: [postform]
    Labstag\Domain\:
      resource: "../src/Domain/"
      public: true
      tags: [domainsclass]

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
    Labstag\Repository\:
      resource: "../src/Repository/"
      public: true
      tags: [repositories]
    Labstag\RequestHandler\:
      resource: "../src/RequestHandler/"
      public: true
      tags: [requestHandler]
    Labstag\Controller\:
      resource: "../src/Controller/"
      tags: ["controller.service_arguments"]
    Labstag\Command\LabstagWorkflowsShowCommand:
        arguments:  
            - !tagged_iterator entitiesclass
    Labstag\Service\RepositoryService:
        arguments:  
            - !tagged_iterator repositories
    Labstag\Service\TrashService:
        arguments:  
            - !tagged_iterator repositories
    Labstag\Command\LabstagInstallCommand:
        arguments:
          - serverenv: "env"
    Labstag\Service\FormService:
        arguments:
            - !tagged_iterator formfront
            - !tagged_iterator postform
    Labstag\Service\BlockService:
        arguments:
            - !tagged_iterator blocksclass
    Labstag\Service\DomainService:
        arguments:
            - !tagged_iterator domainsclass
    Labstag\Service\ParagraphService:
        arguments:
            - !tagged_iterator paragraphsclass
    Labstag\Service\FrontService:
        arguments:
            - !tagged_iterator frontclass
    Labstag\OpenApi\ActionsOpenApi:
      decorates: api_platform.openapi.factory
    Labstag\OpenApi\AttachmentOpenApi:
      decorates: api_platform.openapi.factory
    Labstag\OpenApi\CheckOpenApi:
      decorates: api_platform.openapi.factory
    Labstag\OpenApi\GuardOpenApi:
      decorates: api_platform.openapi.factory
    Labstag\OpenApi\SearchOpenApi:
      decorates: api_platform.openapi.factory
    Labstag\Reader\UploadAnnotationReader:
      arguments: ["@annotations.reader"]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
