{% macro thead(theads, pagination, actions) %}
    <tr>
    {% for thead in theads %}
        <th{% if thead.field is defined and pagination.isSorted(thead.field) %} class="sorted"{% endif %}>
            {% if thead.field is defined %}
                {{ knp_pagination_sortable(pagination, thead.name, thead.field) }}
            {% elseif thead.name is defined %}
                {{ thead.name }}
            {% endif %}
        </th>
    {% endfor %}
    {% if actions == true %}
        <th></th>
    {% endif %}
    <tr>
{% endmacro %}

{% macro form_img(entity, field, name, url) %}
    {% set file = attachment(field) %}
    {% set state = guard_route(url) %}
    {% if state == false %}
        {% set url = '#' %}
    {% endif %}
    {% if file is not null and file.name is not null %}
        <attachment-img
            src="{{ asset(file.name) | imagefilter('my_thumb') }}"
            name="{{ name|e('html_attr') }}"
            url="{{ url }}"
            token="{{ csrf_token('attachment-img-' ~ entity.id) }}"
        ></attachment-img>
    {% endif %}
{% endmacro %}

{% macro show(entity, url, title) %}
    {% set state = guard_route(url) %}
    {% if state == true %}
        <link-show
            href="{{ path(url, {'id': entity.id}) }}"
            title="{{ title|e('html_attr') }}"
        />
    {% endif %}
{% endmacro %}
{% macro guard(entity, url, title) %}
    {% set state1 = guard_route(url) %}
    {% if entity.refgroupe is defined %}
        {% set state2 = guard_user_access(entity) %}
    {% else %}
        {% set state2 = guard_group_access(entity) %}
    {% endif %}
    {% if state1 == true and state2 == true %}
        <link-guard
            href="{{ path(url, {'id': entity.id}) }}"
            title="{{ title|e('html_attr') }}"
        />
    {% endif %}
{% endmacro %}
{% macro edit(entity, url) %}
    {% set state1 = guard_route(url) %}
    {% set state2 = is_granted('edit', entity) %}
    {% if state1 == true and state2 == true %}
        <link-edit
            href="{{ path(url, {'id': entity.id}) }}"
            title="{{ 'link.edit'|trans({}, 'admin.messages')|e('html_attr') }}"
        />
    {% endif %}
{% endmacro %}
{% macro move(entity, url) %}
    {% set state1 = guard_route(url) %}
    {% set state2 = is_granted('move', entity) %}
    {% if state1 == true and state2 == true %}
        <link-move
            href="{{ path(url, {'id': entity.id}) }}"
            title="{{ 'link.move'|trans({}, 'admin.messages')|e('html_attr') }}"
        />
    {% endif %}
{% endmacro %}
{% macro delete(entity, urlDelete, urlList) %}
    {% set state1 = guard_route(urlDelete) %}
    {% set state2 = guard_route(urlList) %}
    {% if state1 == true and state2 == true %}
        <link-delete
            url="{{ path(urlDelete, {'id': entity.id, 'entity': class_entity(entity)}) }}"
            token="{{ csrf_token('delete' ~ entity.id) }}"
            title="{{ 'link.delete'|trans({}, 'admin.messages')|e('html_attr') }}"
            {% if urlList != '' %}
                redirect="{{ path(urlList) }}"
            {% endif %}
        />
    {% endif %}
{% endmacro %}
{% macro destroy(entity, urlDelete, urlList) %}
    {% set state1 = guard_route(urlDelete) %}
    {% set state2 = guard_route(urlList) %}
    {% if state1 == true and state2 == true %}
        <link-destroy
            url="{{ path(urlDelete, {'id': entity.id, 'entity': class_entity(entity)}) }}"
            token="{{ csrf_token('destroy' ~ entity.id) }}"
            title="{{ 'link.destroy'|trans({}, 'admin.messages')|e('html_attr') }}"
            {% if urlList != '' %}
                redirect="{{ path(urlList) }}"
            {% endif %}
        />
    {% endif %}
{% endmacro %}
{% macro restore(entity, urlDelete, urlList) %}
    {% set state1 = guard_route(urlDelete) %}
    {% set state2 = guard_route(urlList) %}
    {% if state1 == true and state2 == true %}
        <link-restore
            url="{{ path(urlDelete, {'id': entity.id, 'entity': class_entity(entity)}) }}"
            token="{{ csrf_token('restore' ~ entity.id) }}"
            title="{{ 'link.restore'|trans({}, 'admin.messages')|e('html_attr') }}"
            {% if urlList != '' %}
                redirect="{{ path(urlList) }}"
            {% endif %}
        />
    {% endif %}
{% endmacro %}
{% macro workflow(entity, actions) %}
    {% set trash = app.request.attributes.get('_route')|split('trash')|length-1 %}
    {% if workflow_has(entity) and actions['workflow'] is defined and 0 == trash %}
        {% set state1 = guard_route(actions['list']) %}
        {% set state2 = guard_route(actions['workflow']) %}
        {% if state1 == true  and state2 == true%}
            <div class="btngrouptable" role="group">
            {% for transition in workflow_transitions(entity) %}
                <workflow-action
                    url="{{ path(actions['workflow'], {'id': entity.id, 'state': transition.name, 'entity': class_entity(entity)}) }}"
                    name="{{ transition.name|e('html_attr') }}"
                    token="{{ csrf_token('workflow-' ~ transition.name ~ entity.id) }}"
                    redirect="{{ path(actions['list']) }}"
                ></workflow-action>
            {% endfor %}
            </div>
        {% endif %}
    {% endif %}
{% endmacro %}
{% macro actions(entity, actions) %}
    {% set trash = app.request.attributes.get('_route')|split('trash')|length-1 %}
    <div class="btngrouptable" role="group">
        {% if actions['show'] is defined %}
            {% if trash == 0 %}
                {{ _self.show(
                    entity,
                    actions['show'],
                    'link.show'|trans({}, 'admin.messages')
                ) }}
            {% elseif trash != 0 %}
                {{ _self.show(
                    entity,
                    actions['preview'],
                    'link.preview'|trans({}, 'admin.messages')
                ) }}
            {% endif %}
        {% endif %}
        {% if 0 == trash %}
            {% if actions['guard'] is defined %}
                {{ _self.guard(entity, actions['guard'], 'guard') }}
            {% endif %}
            {% if actions['move'] is defined %}
                {{ _self.move(entity, actions['move']) }}
            {% endif %}
            {% if actions['edit'] is defined %}
                {{ _self.edit(entity, actions['edit']) }}
            {% endif %}
            {% if actions['delete'] is defined %}
                {% set url = actions['delete'] %}
                {% set urlList = '' %}
                {% if actions['list'] is defined %}
                    {% set urlList = actions['list'] %}
                {% endif %}
                {{ _self.delete(entity, url, urlList) }}
            {% endif %}
        {% else %}
            {% if actions['destroy'] is defined %}
                {% set urlList = app.request.attributes.get('_route') %}
                {% set url = actions['destroy'] %}
                {{ _self.destroy(entity, url, urlList) }}
            {% endif %}
            {% if actions['restore'] is defined %}
                {% set urlList = app.request.attributes.get('_route') %}
                {% set url = actions['restore'] %}
                {{ _self.restore(entity, url, urlList) }}
            {% endif %}
        {% endif %}
    </div>
{% endmacro %}
