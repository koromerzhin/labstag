name: Continuous Integration
on: [push]
jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Repository lampy
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: koromerzhin/lampy
          path: lampy
      - name: Install npm dependencies
        run: npm install
      - name: 'set .env'
        run: 'cp apps/.env.test apps/.env'
      - name: 'set .env'
        run: 'cp .env.example .env'
      - name: 'SET BDD'
        run: npm run bdd:mariadb
      - name: 'Launch Lampy'
        run: cd lampy && npm run exec
      - name: 'Image pull'
        run: npm run docker:getpull-image
      - name: 'Build containers'
        run: npm run docker:deploy
      - name: 'Waiting'
        run: npm run docker:waiting
      - name: linter readme.md
        run: npm run lint:markdown
      - name: linter SCSS
        run: npm run lint:stylelint:fix
      - name: "install PHAR"
        run: npm run download:phar
      - name: 'docker ls'
        run: npm run docker:ls
      - name: linter PHP Code Sniffer
        run: npm run lint:phpcs:error
      - name: linter PHP MD
        run: npm run lint:phpmd
      - name: linter PHPMND
        run: npm run lint:phpmnd
      - name: Add assets
        run: npm run assets
      - name: Test lancement bootstrap
        run: npm run encore:dev
      - name: Linter twig
        run: npm run lint:twig
      - name: Linter yaml
        run: npm run lint:yaml
      - name: linter phpstan
        run: npm run lint:phpstan
      - name: 'BDD MIGRATE'
        run: npm run doctrine:migrate
      - name: 'BDD Schema update'
        run: npm run doctrine:schema:update
      - name: 'Run the fixtures'
        run: npm run doctrine:fixtures
      - name: Run Acceptance Tests
        run: npm run test:behat