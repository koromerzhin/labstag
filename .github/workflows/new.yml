name: Continuous Integration
on: [push]
jobs:
  install:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Docker swarm init'
        run: docker swarm init --default-addr-pool 10.20.0.0/16
      - name: 'Create proxy network'
        run: make docker create-network
      - name: 'Build containers'
        run: make docker deploy
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: |
            apps/bin
            apps/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/apps/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 'Create folders'
        run: make folders
      - name: 'Installation variable environnement'
        run: make env dev
      - name: 'sleep'
        run: make sleep 60
      - name: 'docker ls'
        run: make docker ls
      - name: 'Create file .env'
        run: make env dev
      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: make node_modules
      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: make composer dev
  linterreadme:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter readme
  linterstylelint:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter stylelint
  linteronlyerror:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter phpcs-onlyerror
  linterphpmd:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter phpmd
  linterphpmnd:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter phpmnd
  lintertwig:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter twig
  linteryaml:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: install
    steps:
      - run: make linter yaml
  bddfixtures:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ["7.4"]
    needs: 
      - linterstylelint
      - linteronlyerror
      - linterphpmd
      - linterphpmnd
      - lintertwig
      - linteryaml
    steps:
      - run: make bdd migrate
    
   